#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 60 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 1164 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 183
(
 #"#reader(lib \"htdp-beginner-abbr-reader.ss\" \"lang\")((modname Prob"
 #"lemSet0) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#"
 #"t constructor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 5 #";;Ex1"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #" "
0 0 20 3 2 #"24"
0 0 23 3 1 #" "
0 0 20 3 3 #"366"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";;Tests:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #" "
0 0 20 3 2 #"60"
0 0 23 3 1 #" "
0 0 20 3 2 #"24"
0 0 23 3 1 #" "
0 0 20 3 3 #"366"
0 0 23 3 2 #") "
0 0 20 3 8 #"31622400"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 5 #";;Ex2"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #") ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";;Tests:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 1 #">"
0 0 23 3 2 #" ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 3 #") ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 3 #") ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 4 #"))) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 5 #";;Ex3"
0 0 23 29 1 #"\n"
0 0 17 3 25 #"; f->c : Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 59
#"; GIVEN: a temperature in degrees Fahrenheit as an argument"
0 0 23 29 1 #"\n"
0 0 17 3 57 #"; RETURNS: the equivalent temperature in degrees Celcius."
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 17 #"; (f->c 32)  => 0"
0 0 23 29 1 #"\n"
0 0 17 3 33 #"; (f->c 100) => 37.77777777777778"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"f->c"
0 0 23 3 1 #" "
0 0 14 3 4 #"temp"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 1 #" "
0 0 14 3 4 #"temp"
0 0 23 3 1 #" "
0 0 20 3 2 #"32"
0 0 23 3 3 #") ("
0 0 14 3 1 #"/"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"9"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Tests"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"f->c"
0 0 23 3 1 #" "
0 0 20 3 3 #"-10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"f->c"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"f->c"
0 0 23 3 1 #" "
0 0 20 3 2 #"32"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"f->c"
0 0 23 3 1 #" "
0 0 20 3 2 #"50"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 4 #"f->c"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 5 #";;Ex4"
0 0 23 29 1 #"\n"
0 0 17 3 46 #"; tip : NonNegNumber Number[0.0,1.0] -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 50 #"; GIVEN: the amount of the bill in dollars and the"
0 0 23 29 1 #"\n"
0 0 17 3 19 #"; percentage of tip"
0 0 23 29 1 #"\n"
0 0 17 3 44 #"; RETURNS: the amount of the tip in dollars."
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 23 #"; (tip 10 0.15)  => 1.5"
0 0 23 29 1 #"\n"
0 0 17 3 23 #"; (tip 20 0.17)  => 3.4"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 3 #"tip"
0 0 23 3 1 #" "
0 0 14 3 4 #"bill"
0 0 23 3 1 #" "
0 0 14 3 11 #"tipfraction"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 14 3 4 #"bill"
0 0 23 3 1 #" "
0 0 14 3 11 #"tipfraction"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Tests"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 3 #"tip"
0 0 23 3 1 #" "
0 0 20 3 2 #"10"
0 0 23 3 1 #" "
0 0 20 3 4 #"0.15"
0 0 23 3 2 #") "
0 6          10 58 4 #"3/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 3 #"tip"
0 0 23 3 1 #" "
0 0 20 3 2 #"20"
0 0 23 3 1 #" "
0 0 20 3 4 #"0.17"
0 0 23 3 2 #") "
0 0 20 3 3 #"3.4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 3 #"tip"
0 0 23 3 1 #" "
0 0 20 3 3 #"100"
0 0 23 3 1 #" "
0 0 20 3 2 #".1"
0 0 23 3 2 #") "
0 0 20 3 2 #"10"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";Ex5"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";sq: Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";This function takes in a number, and returns the square of that num"
 #"ber"
) 0 0 23 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 13 #"; (sq 2) -> 4"
0 0 23 29 1 #"\n"
0 0 17 3 14 #"; (sq 5) -> 25"
0 0 23 29 1 #"\n"
0 0 17 3 13 #"; (sq 0) -> 0"
0 0 23 29 1 #"\n"
0 0 17 3 14 #"; (sq -1) -> 1"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 13 #";;Definition:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 2 #"sq"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Tests"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 2 #"sq"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 20 3 1 #"4"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 2 #"sq"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #") "
0 0 20 3 2 #"25"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 2 #"sq"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 2 #"sq"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 5 #";Ex 6"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";quadratic-root: Number Number Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";Given a quadratic equation, this function computes only the"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 3 #"-b+"
0 0 17 3 1 #"("
0 0 17 3 4 #"sqrt"
0 0 17 3 2 #" ("
0 0 17 3 7 #"b*b-4ac"
0 0 17 3 3 #")))"
0 0 17 3 8 #"/2a root"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 13 #"corresponding"
0 0 17 3 1 #" "
0 0 17 3 18 #"quadratic equation"
0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #"; The first Number is a, the second Number is b, and the third Numbe"
 #"r is c"
) 0 0 23 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 14 #"quadratic-root"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 2 #"-1"
0 0 17 3 6 #") -> 1"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 14 #"quadratic-root"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 8 #"-9) -> 3"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";Definition:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 14 #"quadratic-root"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 4 #"sqrt"
0 0 23 3 2 #" ("
0 0 14 3 1 #"-"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"4"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 6 #")))) ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";Tests:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 14 #"quadratic-root"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 2 #") "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 14 #"quadratic-root"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 20 3 2 #"-9"
0 0 23 3 2 #") "
0 0 20 3 1 #"3"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";Example 7"
0 0 23 29 1 #"\n"
0 0 17 3 34 #"; circumference : Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 34 #"; GIVEN: the radius r of a circle "
0 0 23 29 1 #"\n"
0 0 17 3 59
#"; RETURNS: its circumference, using the formula 2 * pi * r."
0 0 23 29 1 #"\n"
0 0 17 3 40 #";The number given, must be 0 or positive"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #"; Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 43 #"; (circumference 1)  =>  6.283185307179586 "
0 0 23 29 1 #"\n"
0 0 17 3 26 #"; (circumference 0)  =>  0"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";Definition"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"circumference"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Tests"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 13 #"circumference"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 13 #"circumference"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 13 #"circumference"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";Ex8"
0 0 23 29 1 #"\n"
0 0 17 3 28 #";circ-area: Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";Given a radius r of a circle, this function computes the area of th"
 #"e circle"
) 0 0 23 29 1 #"\n"
0 0 17 3 9 #";Examples"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";(circ-area 1) -> 3.141592653589793"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";(circ-area 5) -> 78.53981633974483"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";(circ-area 7) -> 153.93804002589985"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";Definition"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"circ-area"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 23 3 1 #" "
0 0 14 3 2 #"pi"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 1 #" "
0 0 14 3 1 #"r"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";;Tests:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"circ-area"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"circ-area"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"circ-area"
0 0 23 3 1 #" "
0 0 20 3 1 #"7"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 5 #";Ex 9"
0 0 23 29 1 #"\n"
0 0 17 3 39 #";According to the Racket documentation:"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";Remainder"
0 0 17 3 1 #" "
0 0 17 3 10 #"determines"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 10 #" remainder"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 8 #"dividing"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 2 #"by"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"second"
0 0 17 3 1 #" "
0 0 17 3 7 #"integer"
0 0 17 3 2 #" ("
0 0 17 3 5 #"exact"
0 0 17 3 1 #" "
0 0 17 3 2 #"or"
0 0 17 3 1 #" "
0 0 17 3 7 #"inexact"
0 0 17 3 1 #")"
0 0 17 3 1 #"."
0 0 23 29 1 #"\n"
0 0 17 3 114
(
 #";The difference between remainder and modulo is the way that the mod"
 #"ulo works when dividing with negative numbers."
) 0 0 23 29 1 #"\n"
0 0 17 3 102
(
 #";You may have potentially different answers if you utilize negative "
 #"numbers using modulo vs remainder."
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";number-even? Number -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";This function takes in a number, and returns a boolean:"
0 0 23 29 1 #"\n"
0 0 17 3 10 #"; -true if"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 9 #"divisible"
0 0 17 3 1 #" "
0 0 17 3 2 #"by"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 3 #" or"
0 0 23 29 1 #"\n"
0 0 17 3 19 #"; -false otherwise."
0 0 23 29 1 #"\n"
0 0 17 3 11 #";Examples: "
0 0 23 29 1 #"\n"
0 0 17 3 25 #";(number-even? 2) -> true"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";(number-even? 0) -> true"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";(number-even? -2) -> true"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";(number-even? 3) -> false"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";(number-even? -1) -> false"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";Definition"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 2 #"de"
0 0 15 3 4 #"fine"
0 0 23 3 2 #" ("
0 0 14 3 12 #"number-even?"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"even?"
0 0 23 3 1 #" "
0 0 14 3 3 #"num"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";;Tests"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"number-even?"
0 0 23 3 1 #" "
0 0 20 3 1 #"2"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"number-even?"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"number-even?"
0 0 23 3 1 #" "
0 0 20 3 2 #"-2"
0 0 23 3 2 #") "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"number-even?"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 12 #"number-even?"
0 0 23 3 1 #" "
0 0 20 3 2 #"-1"
0 0 23 3 2 #") "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";Ex 10"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";largest-sum: Number Number Number -> Number"
0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";Given 3 Numbers, this function returns the sum of the larger two nu"
 #"mbers"
) 0 0 23 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 11 #"largest-sum"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 6 #"5) ->8"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 11 #"largest-sum"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 5 #") ->8"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 11 #"largest-sum"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 5 #") ->8"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 11 #"largest-sum"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 5 #") ->8"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 11 #"largest-sum"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 5 #") ->8"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 11 #"largest-sum"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 5 #") ->8"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";Definition:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"largest-sum"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 23 3 2 #" ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 2 #">="
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 2 #">="
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 10 #"         ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 2 #">="
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 3 #") ("
0 0 14 3 2 #">="
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 5 #"))) ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 2 #">="
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 3 #") ("
0 0 14 3 2 #"<="
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 7 #";Tests:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"largest-sum"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #") "
0 0 20 3 1 #"8"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"largest-sum"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 20 3 1 #"8"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"largest-sum"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 20 3 1 #"8"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"largest-sum"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 2 #") "
0 0 20 3 1 #"8"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"largest-sum"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 2 #") "
0 0 20 3 1 #"8"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 11 #"largest-sum"
0 0 23 3 1 #" "
0 0 20 3 1 #"5"
0 0 23 3 1 #" "
0 0 20 3 1 #"1"
0 0 23 3 1 #" "
0 0 20 3 1 #"3"
0 0 23 3 2 #") "
0 0 20 3 1 #"8"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 5 #";Ex11"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";The contracts for the following functions:"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";(make-posn x y) -> posn"
0 0 23 29 1 #"\n"
0 0 17 3 23 #"; x and y cold be any/c"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 5 #";Ex12"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";    ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 65
#"3)-> This creates a posn where posn-x is 5, and posn-y is 3.  It "
0 0 23 29 1 #"\n"
0 0 17 3 6 #";    ("
0 0 17 3 5 #"posn?"
0 0 17 3 1 #" "
0 0 17 3 8 #"5) false"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";    ("
0 0 17 3 5 #"posn?"
0 0 17 3 1 #" "
0 0 17 3 11 #"true) false"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";    ("
0 0 17 3 5 #"posn?"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 8 #"1)) true"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";    ("
0 0 17 3 6 #"posn-x"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 1 #" "
0 0 17 3 6 #"5)) 8 "
0 0 23 29 1 #"\n"
0 0 17 3 6 #";    ("
0 0 17 3 6 #"posn-y"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"42"
0 0 17 3 1 #" "
0 0 17 3 7 #"15)) 15"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 59
#";Ex13: What will happen if you type (make-posn true false):"
0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #";This creates a posn structure where posn-x is true, and posn-y is f"
 #"alse"
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 5 #"posn?"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 3 #")) "
0 0 14 3 5 #"false"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";and"
0 0 17 3 1 #" "
0 0 17 3 4 #"what"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"result"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 8 #" (posn-x"
0 0 17 3 25 #" (make-posn true false))?"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";;The result would be true."
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 23 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 23 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 23 3 1 #" "
0 0 14 3 4 #"true"
0 0 23 3 1 #" "
0 0 14 3 5 #"false"
0 0 23 3 3 #")) "
0 0 14 3 4 #"true"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";Ex14:"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 23 3 1 #" "
0 0 14 3 7 #"student"
0 0 23 3 2 #" ("
0 0 14 3 2 #"id"
0 0 23 3 1 #" "
0 0 14 3 4 #"name"
0 0 23 3 1 #" "
0 0 14 3 5 #"major"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";Racket will create the functions:"
0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";(make-student x y z) where x, y, z are id, name, and major respecti"
 #"vely in any/c"
) 0 0 23 29 1 #"\n"
0 0 17 3 6 #"; that"
0 0 17 3 1 #" "
0 0 17 3 31 #"we must initially determine for"
0 0 17 3 1 #" "
0 0 17 3 2 #"id"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 4 #"name"
0 0 17 3 1 #","
0 0 17 3 6 #" major"
0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";(student? any/c) which determines if the any/c given is a Student s"
 #"tructure"
) 0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";(student-id (make-student x y z)) which extracts the id of the Stud"
 #"ent"
) 0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #";(student-name (make-student x y z)) which extracts the name of the "
 #"Student"
) 0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";(student-major (make-student x y z)) which extracts the major of th"
 #"e Student"
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 5 #";Ex15"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 13 #"define-struct"
0 0 17 3 1 #" "
0 0 17 3 7 #"student"
0 0 17 3 2 #" ("
0 0 17 3 2 #"id"
0 0 17 3 1 #" "
0 0 17 3 4 #"name"
0 0 17 3 1 #" "
0 0 17 3 7 #"major))"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";A Student is a (make-student Number 'Symbol 'Symbol)."
0 0 23 29 1 #"\n"
0 0 17 3 52 #";It represents a Student in a university or college."
0 0 23 29 1 #"\n"
0 0 17 3 16 #";Interpretation:"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; -id is the student ID Number"
0 0 23 29 1 #"\n"
0 0 17 3 47 #";; -name is the name of the student as a symbol"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";; -major is the major of the student as a symbol"
0 0 23 29 1 #"\n"
0           0
